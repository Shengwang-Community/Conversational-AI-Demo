plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
}
apply from: 'resource.gradle'

def buildTimestamp = new Date().format("yyyyMMddHHmm")

if (project.getProperty("AG_APP_ID").toString().isEmpty()) {
    throw new GradleException("Please configure Agora ID and Certificate in gradle.properties")
}

android {
    namespace 'io.agora.agent'
    compileSdk rootProject.ext.compileSdkVersion

    defaultConfig {
        ndk.abiFilters 'arm64-v8a', 'armeabi-v7a'
        minSdk rootProject.ext.minSdkVersion
        targetSdk rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.7.0"
        
        buildConfigField("String", "BUILD_TIMESTAMP", "\"${buildTimestamp}\"")

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    flavorDimensions "region"

    productFlavors {
        china {
            dimension "region"
            applicationId "cn.shengwang.convoai"
            resValue "string", "app_name", "对话式 AI 引擎体验"
            buildConfigField("String", "TOOLBOX_SERVER_HOST", "\"${project.getProperty("TOOLBOX_SERVER_HOST")}\"")
            buildConfigField("String", "AG_APP_ID", "\"${project.getProperty("AG_APP_ID")}\"")
            buildConfigField("String", "AG_APP_CERTIFICATE", "\"${project.getProperty("AG_APP_CERTIFICATE")}\"")
        }
    }

    signingConfigs {
        release {
            storeFile new File(rootProject.rootDir.absolutePath + "/keystore.key")
            storePassword "965606"
            keyAlias "agora"
            keyPassword "965606"
        }
    }

    applicationVariants.all {
        variant ->
            variant.outputs.all { output ->
                def flavor = variant.productFlavors.isEmpty() ? "default" : variant.productFlavors[0].name
                def flavorPrefix = ""
                if (flavor == "china") {
                    flavorPrefix = "ShengWang_Conversational_Al_Engine_Demo_for_Android"
                } else if (flavor == "global") {
                    flavorPrefix = "Agora_Conversational_Al_Engine_Demo_for_Android"
                } else {
                    flavorPrefix = "Conversational_Al_Engine_Demo_for_Android"
                }
                outputFileName = new File(
                        flavorPrefix + "_" +
                                "v" + defaultConfig.versionName + "_" +
                                buildTimestamp + ".apk")
            }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        viewBinding true
        buildConfig true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
}

dependencies {
    implementation project(':common')
    implementation project(':scenes:convoai')

    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
}