import type * as React from 'react'

import { cn } from '@/lib/utils'

export const StartCallIcon = (props: React.SVGProps<SVGSVGElement>) => {
  return (
    <svg
      xmlns='http://www.w3.org/2000/svg'
      viewBox='0 0 24 24'
      fill='none'
      {...props}
    >
      <path
        d='M7.07108 16.7278C5.74088 15.3976 4.74468 13.8495 4.08247 12.0836C3.42026 10.3176 3.18085 8.47727 3.36425 6.5625C3.38907 6.36877 3.46441 6.20369 3.59026 6.06728C3.71612 5.93086 3.87573 5.86099 4.0691 5.85765L7.0985 5.80537C7.27038 5.8024 7.44096 5.87463 7.61025 6.02206C7.77953 6.16949 7.87343 6.32896 7.89195 6.50047L8.30391 9.69906C8.31262 9.81704 8.30002 9.92465 8.26612 10.0219C8.23223 10.1191 8.17703 10.206 8.10053 10.2825L5.82206 12.561C6.09061 13.1792 6.41899 13.7535 6.80719 14.2837C7.1954 14.814 7.6112 15.3008 8.0546 15.7442C8.498 16.1876 8.98483 16.6034 9.5151 16.9917C10.0454 17.3799 10.6196 17.7082 11.2379 17.9768L13.5164 15.6983C13.5928 15.6218 13.6797 15.5666 13.777 15.5327C13.8742 15.4988 13.9818 15.4862 14.0998 15.4949L17.2984 15.9069C17.5234 15.9352 17.6964 16.0208 17.8175 16.1637C17.9385 16.3066 17.9972 16.4855 17.9935 16.7003L17.9412 19.7297C17.9379 19.9231 17.868 20.0827 17.7316 20.2086C17.5952 20.3344 17.4301 20.4098 17.2363 20.4346C15.3216 20.618 13.4812 20.3786 11.7153 19.7164C9.94935 19.0542 8.40128 18.058 7.07108 16.7278Z'
        fill='currentColor'
      />
      <path
        d='M9.99957 7.21275C9.99957 7.58826 10.2812 7.905 10.6566 7.95167C10.665 7.95266 11.5282 8.07141 12.4318 8.59924C13.6308 9.29944 14.3284 10.3674 14.5054 11.7732C14.5524 12.1459 14.8714 12.4255 15.2496 12.4255C15.6278 12.4255 15.9468 12.1459 15.9938 11.7732C15.9948 11.7648 16.1144 10.9077 16.646 10.0106C17.3512 8.82006 18.4268 8.12741 19.8426 7.95167C20.218 7.905 20.4996 7.58826 20.4996 7.21275C20.4996 6.83723 20.218 6.52049 19.8426 6.47383C19.8342 6.47284 18.971 6.35408 18.0674 5.82626C16.8684 5.12606 16.1708 4.05809 15.9938 2.65234C15.9468 2.2796 15.6278 2 15.2496 2C14.8714 2 14.5524 2.2796 14.5054 2.65234C14.5044 2.66068 14.3848 3.51775 13.8532 4.41494C13.148 5.60543 12.0724 6.29808 10.6566 6.47383C10.2812 6.52049 9.99957 6.83723 9.99957 7.21275ZM15.146 5.17014C15.172 5.12626 15.1972 5.08257 15.2216 5.03908C15.7038 5.88345 16.405 6.58325 17.3068 7.10988C17.351 7.1357 17.395 7.16072 17.4388 7.18495C16.5884 7.66372 15.8836 8.35995 15.3532 9.25535C15.3272 9.29924 15.302 9.34293 15.2776 9.38641C14.7954 8.54205 14.0942 7.84225 13.1924 7.31561C13.1482 7.2898 13.1042 7.26478 13.0604 7.24055C13.9108 6.76177 14.6156 6.06555 15.146 5.17014Z'
        fill='currentColor'
      />
    </svg>
  )
}

export const SubtitleZHCNIcon = (
  props: React.SVGProps<SVGSVGElement> & {
    isGradient?: boolean
  }
) => {
  const { isGradient = false, ...rest } = props
  return (
    <svg
      xmlns='http://www.w3.org/2000/svg'
      viewBox='0 0 34 31'
      fill='none'
      {...rest}
    >
      <defs>
        <linearGradient
          id='subtitle-cn-gradient'
          x1='0%'
          y1='0%'
          x2='0%'
          y2='100%'
        >
          <stop offset='0%' stopColor='#00C2FF' />
          <stop offset='64.5%' stopColor='#00FFA2' />
          <stop offset='98.5%' stopColor='#FFFFFF' />
        </linearGradient>
      </defs>
      <path
        fillRule='evenodd'
        clipRule='evenodd'
        d='M6.66667 0C2.98477 0 0 2.98477 0 6.66667V18.3333C0 22.0152 2.98477 25 6.66667 25H9.5C9.9479 25 10.2796 25.4163 10.1795 25.8529L9 31L18.3722 25.4461C18.865 25.1541 19.4272 25 20 25H27.3333C31.0152 25 34 22.0152 34 18.3333V6.66667C34 2.98477 31.0152 0 27.3333 0H6.66667ZM4.15376 6.93202V9.85046H5.79454V11.3837H11.3356C10.9455 11.8544 10.5286 12.3251 10.0982 12.7958H4.00582V14.4904H9.70822V16.8036H7.67741V18.5117H11.4835V14.4904H16.1234V12.7958H12.1963C12.9763 11.8678 13.7026 10.886 14.3347 9.85046H15.962V6.93202H10.9455V6.13852H9.17025V6.93202H4.15376ZM14.2136 9.74287H5.90213V8.5997H14.2136V9.74287ZM20.2119 8.69384H18.4367V12.5941H22.6328V13.0917H17.4011V14.5845H18.9074C18.5173 15.1225 17.9794 15.5125 17.2531 15.7949V17.4895C18.0466 17.2071 18.7056 16.844 19.257 16.4002V18.3503H20.9516V16.8978H22.6462V18.5789H24.3677V16.8978H26.0623V18.3503H27.7568V16.4002C28.3083 16.844 28.9673 17.2071 29.7608 17.4895V15.7949C29.0345 15.5125 28.4965 15.1225 28.1065 14.5845H29.6128V13.0917H24.3811V12.5941H28.5772V8.69384H26.802V8.18278H29.3573V6.73028H26.802V6.24612H25.0536V6.73028H21.9603V6.24612H20.2119V6.73028H17.6566V8.18278H20.2119V8.69384ZM22.6462 15.4856H20.1312C20.333 15.2032 20.5078 14.9073 20.6557 14.5845H26.3581C26.5061 14.9073 26.6809 15.2032 26.8827 15.4856H24.3677V14.7863H22.6462V15.4856ZM26.8289 11.5181H20.185V11.1281H26.8289V11.5181ZM26.8289 10.1463H20.185V9.74287H26.8289V10.1463ZM25.0536 8.69384H21.9603V8.18278H25.0536V8.69384Z'
        fill={isGradient ? 'url(#subtitle-cn-gradient)' : 'currentColor'}
      />
    </svg>
  )
}

export const SubtitleENIcon = (
  props: React.SVGProps<SVGSVGElement> & {
    isGradient?: boolean
  }
) => {
  const { isGradient = false, ...rest } = props
  return (
    <svg
      xmlns='http://www.w3.org/2000/svg'
      viewBox='0 0 30 30'
      fill='none'
      {...rest}
    >
      <defs>
        <linearGradient
          id='subtitle-en-gradient'
          x1='0%'
          y1='0%'
          x2='0%'
          y2='100%'
        >
          <stop offset='0%' stopColor='#00C2FF' />
          <stop offset='64.5%' stopColor='#00FFA2' />
          <stop offset='98.5%' stopColor='#FFFFFF' />
        </linearGradient>
      </defs>
      <path
        fillRule='evenodd'
        clipRule='evenodd'
        d='M7.49998 0.833496C3.81808 0.833496 0.833313 3.81827 0.833313 7.50017V22.5002C0.833313 26.1821 3.81809 29.1668 7.49998 29.1668H22.5C26.1819 29.1668 29.1666 26.1821 29.1666 22.5002V7.50016C29.1666 3.81826 26.1819 0.833496 22.5 0.833496H7.49998ZM10.4337 8.81552C6.97429 8.81552 4.16667 11.6231 4.16667 15.0825C4.16667 18.5419 6.97429 21.3496 10.4337 21.3496C12.1571 21.3496 13.7239 20.6445 14.8645 19.5133L12.6491 17.2979C12.2108 17.7363 11.6524 18.0349 11.0444 18.1558C10.4364 18.2768 9.80626 18.2147 9.23358 17.9774C8.66091 17.7401 8.17148 17.3383 7.82721 16.8228C7.48293 16.3073 7.29929 15.7013 7.29951 15.0814C7.29973 14.4615 7.4838 13.8557 7.82844 13.3404C8.17307 12.8252 8.66279 12.4237 9.23563 12.1868C9.80848 11.95 10.4387 11.8883 11.0466 12.0097C11.6545 12.1311 12.2127 12.43 12.6506 12.8687L14.866 10.6533C14.2849 10.0698 13.5942 9.60704 12.8335 9.29163C12.0728 8.97622 11.2572 8.81441 10.4337 8.81552ZM21.401 8.81552C17.9416 8.81552 15.134 11.6231 15.134 15.0825C15.135 16.3215 15.5031 17.5324 16.1919 18.5623C16.8807 19.5921 17.8592 20.3948 19.0038 20.8689C20.1485 21.343 21.408 21.4673 22.6233 21.226C23.8385 20.9847 24.955 20.3887 25.8318 19.5133L23.6164 17.2979C23.1781 17.7363 22.6197 18.0349 22.0117 18.1558C21.4037 18.2768 20.7736 18.2147 20.2009 17.9774C19.6282 17.7401 19.1388 17.3383 18.7945 16.8228C18.4502 16.3073 18.2666 15.7013 18.2668 15.0814C18.267 14.4615 18.4511 13.8557 18.7957 13.3404C19.1404 12.8252 19.6301 12.4237 20.2029 12.1868C20.7758 11.95 21.406 11.8883 22.0139 12.0097C22.6218 12.1311 23.18 12.43 23.6179 12.8687L25.8333 10.6533C25.2522 10.0698 24.5615 9.60704 23.8008 9.29163C23.0401 8.97622 22.2245 8.81441 21.401 8.81552Z'
        fill={isGradient ? 'url(#subtitle-en-gradient)' : 'currentColor'}
      />
    </svg>
  )
}

export const CustomSubtitleIcon = (
  props: React.SVGProps<SVGSVGElement> & {
    isZHCN?: boolean
    isGradient?: boolean
  }
) => {
  const { isZHCN = false, isGradient = false, ...rest } = props

  if (isZHCN) {
    return <SubtitleZHCNIcon isGradient={isGradient} {...rest} />
  }

  return <SubtitleENIcon isGradient={isGradient} {...rest} />
}

export const MicrophoneIcon = (props: React.SVGProps<SVGSVGElement>) => {
  return (
    <svg
      xmlns='http://www.w3.org/2000/svg'
      viewBox='0 0 24 30'
      fill='none'
      {...props}
    >
      <path
        fillRule='evenodd'
        clipRule='evenodd'
        d='M12 0.983887C7.93056 0.983887 4.63161 4.28284 4.63161 8.35231V13.6155C4.63161 17.6849 7.93056 20.9839 12 20.9839C16.0695 20.9839 19.3685 17.6849 19.3685 13.6155V8.35231C19.3685 4.28284 16.0695 0.983887 12 0.983887ZM1.47371 12.5628C2.05507 12.5628 2.52634 13.0341 2.52634 13.6155C2.52634 18.8476 6.76786 23.0891 12 23.0891C17.2322 23.0891 21.4737 18.8476 21.4737 13.6155C21.4737 13.0341 21.945 12.5628 22.5263 12.5628C23.1077 12.5628 23.579 13.0341 23.579 13.6155C23.579 19.6555 18.9542 24.6154 13.0527 25.1472V28.3523C13.0527 28.9337 12.5814 29.4049 12 29.4049C11.4187 29.4049 10.9474 28.9337 10.9474 28.3523V25.1472C5.04582 24.6154 0.421082 19.6555 0.421082 13.6155C0.421082 13.0341 0.892361 12.5628 1.47371 12.5628Z'
        fill='currentColor'
      />
    </svg>
  )
}

export const MicrophoneOffIcon = (props: React.SVGProps<SVGSVGElement>) => {
  return (
    <svg
      xmlns='http://www.w3.org/2000/svg'
      viewBox='0 0 24 31'
      fill='none'
      {...props}
    >
      <path
        fillRule='evenodd'
        clipRule='evenodd'
        d='M21.0472 0.717555C20.5948 0.400777 19.9712 0.510725 19.6545 0.96313L2.44716 25.5377C2.13038 25.9901 2.24033 26.6136 2.69273 26.9304C3.14514 27.2472 3.76868 27.1373 4.08546 26.6848L21.2928 2.11028C21.6095 1.65788 21.4996 1.03433 21.0472 0.717555ZM12 1.9837C13.2663 1.9837 14.458 2.30313 15.4989 2.8658L5.23064 17.5303C4.84513 16.6363 4.63155 15.6507 4.63155 14.6153V9.35212C4.63155 5.28266 7.9305 1.9837 12 1.9837ZM2.52628 14.6153C2.52628 16.3928 3.0158 18.0559 3.86738 19.4773L2.5679 21.3331C1.21621 19.4387 0.421021 17.1198 0.421021 14.6153C0.421021 14.0339 0.8923 13.5626 1.47365 13.5626C2.055 13.5626 2.52628 14.0339 2.52628 14.6153ZM8.92945 23.5803L7.68174 25.3622C8.70595 25.7741 9.80262 26.0439 10.9473 26.147V29.3521C10.9473 29.9335 11.4186 30.4048 12 30.4048C12.5813 30.4048 13.0526 29.9335 13.0526 29.3521V26.147C18.9542 25.6152 23.5789 20.6553 23.5789 14.6153C23.5789 14.0339 23.1076 13.5626 22.5263 13.5626C21.9449 13.5626 21.4736 14.0339 21.4736 14.6153C21.4736 19.8474 17.2321 24.089 12 24.089C10.9253 24.089 9.89238 23.91 8.92945 23.5803ZM19.3409 8.71119L10.2021 21.7628C10.7775 21.9071 11.3798 21.9837 12 21.9837C16.0694 21.9837 19.3684 18.6847 19.3684 14.6153V9.35212C19.3684 9.13618 19.3591 8.92241 19.3409 8.71119Z'
        fill='currentColor'
      />
    </svg>
  )
}

export const MicrophoneDisallowIcon = (
  props: React.SVGProps<SVGSVGElement>
) => {
  return (
    <svg
      xmlns='http://www.w3.org/2000/svg'
      viewBox='0 0 40 40'
      fill='none'
      {...props}
    >
      <path
        fillRule='evenodd'
        clipRule='evenodd'
        d='M21.7355 6.18944C21.1789 6.05507 20.5978 5.98389 20 5.98389C15.9305 5.98389 12.6315 9.28284 12.6315 13.3523V18.6155C12.6315 20.9552 13.7221 23.0402 15.4226 24.39L18.9713 19.4613L17.6926 18.3424C16.168 17.0084 15.8814 14.7453 17.0254 13.0734L21.7355 6.18944ZM14.1914 26.1C11.9612 24.3668 10.5263 21.6587 10.5263 18.6155C10.5263 18.0341 10.055 17.5628 9.47365 17.5628C8.8923 17.5628 8.42102 18.0341 8.42102 18.6155C8.42102 22.3622 10.2005 25.6932 12.9605 27.8096L14.1914 26.1ZM18.6896 30.1211L20.1535 28.0879C25.3149 28.0059 29.4736 23.7964 29.4736 18.6155C29.4736 18.0341 29.9449 17.5628 30.5263 17.5628C31.1076 17.5628 31.5789 18.0341 31.5789 18.6155C31.5789 24.6555 26.9542 29.6154 21.0526 30.1472V33.3523C21.0526 33.9337 20.5813 34.4049 20 34.4049C19.4186 34.4049 18.9473 33.9337 18.9473 33.3523V30.1472C18.8612 30.1394 18.7752 30.1307 18.6896 30.1211ZM21.834 25.7538L24.9032 21.4911C26.1083 19.8173 25.8433 17.5017 24.2911 16.1435L22.9798 14.9962L26.4917 9.86343C27.051 10.902 27.3684 12.0901 27.3684 13.3523V18.6155C27.3684 22.0517 25.0162 24.9386 21.834 25.7538Z'
        fill='currentColor'
        fillOpacity='0.6'
      />
      <path
        d='M25.5 6L19.5013 14.7673C19.2153 15.1853 19.287 15.7511 19.6681 16.0846L22.3156 18.4011C22.7036 18.7407 22.7699 19.3196 22.4686 19.738L14 31.5'
        stroke='currentColor'
        strokeOpacity='0.75'
        strokeWidth='2'
        strokeLinecap='round'
      />
    </svg>
  )
}

export const AgentAvatarIcon = (props: React.SVGProps<SVGSVGElement>) => {
  return (
    <svg
      xmlns='http://www.w3.org/2000/svg'
      viewBox='0 0 20 20'
      fill='none'
      {...props}
    >
      <path
        fillRule='evenodd'
        clipRule='evenodd'
        d='M5.02155 6.68136C5.02155 6.80089 5.11055 6.90172 5.22921 6.91658C5.23186 6.91689 5.50469 6.95469 5.7903 7.12272C6.16927 7.34561 6.38976 7.68558 6.44571 8.13308C6.46056 8.25173 6.56139 8.34074 6.68093 8.34074C6.80047 8.34074 6.90129 8.25173 6.91615 8.13308C6.91647 8.13042 6.95427 7.85759 7.12229 7.57199C7.34519 7.19301 7.68515 6.97252 8.13265 6.91658C8.2513 6.90172 8.34031 6.80089 8.34031 6.68136C8.34031 6.56182 8.2513 6.46099 8.13265 6.44613C8.13 6.44582 7.85716 6.40802 7.57156 6.23999C7.19259 6.0171 6.97209 5.67713 6.91615 5.22963C6.90129 5.11098 6.80047 5.02197 6.68093 5.02197C6.56139 5.02197 6.46056 5.11098 6.44571 5.22963C6.44539 5.23229 6.40759 5.50512 6.23956 5.79072C6.01667 6.1697 5.6767 6.39019 5.22921 6.44613C5.11055 6.46099 5.02155 6.56182 5.02155 6.68136ZM2.53278 12.0743C2.53278 12.2835 2.68854 12.46 2.89618 12.486C2.90083 12.4865 3.37829 12.5527 3.87809 12.8467C4.54129 13.2368 4.92715 13.8317 5.02506 14.6148C5.05105 14.8225 5.2275 14.9782 5.4367 14.9782C5.64589 14.9782 5.82234 14.8225 5.84833 14.6148C5.84889 14.6102 5.91504 14.1327 6.20908 13.6329C6.59915 12.9697 7.19409 12.5839 7.97721 12.486C8.18485 12.46 8.34061 12.2835 8.34061 12.0743C8.34061 11.8651 8.18485 11.6887 7.97721 11.6627C7.97256 11.6621 7.4951 11.596 6.9953 11.3019C6.3321 10.9119 5.94624 10.3169 5.84833 9.53381C5.82234 9.32617 5.64589 9.17041 5.4367 9.17041C5.2275 9.17041 5.05105 9.32617 5.02506 9.53381C5.0245 9.53846 4.95835 10.0159 4.66431 10.5157C4.27424 11.1789 3.6793 11.5648 2.89618 11.6627C2.68854 11.6887 2.53278 11.8651 2.53278 12.0743ZM13.5508 13.5775C13.5099 13.9038 13.2327 14.1486 12.9039 14.1486C12.5752 14.1486 12.2979 13.9038 12.2571 13.5775C12.1032 12.3469 11.4969 11.412 10.4547 10.799C9.66928 10.337 8.91898 10.233 8.91168 10.2322C8.58538 10.1913 8.34062 9.91403 8.34061 9.5853C8.34061 9.25657 8.58538 8.97929 8.91168 8.93844C10.1423 8.78458 11.0772 8.17822 11.6902 7.13605C12.1522 6.35064 12.2562 5.60034 12.257 5.59304C12.2979 5.26674 12.5752 5.02197 12.9039 5.02197C13.2326 5.02197 13.5099 5.26674 13.5508 5.59303C13.7046 6.82365 14.311 7.75856 15.3531 8.37151C16.1386 8.83357 16.8889 8.93752 16.8962 8.93839C17.2224 8.97924 17.4672 9.25652 17.4672 9.58525C17.4672 9.91398 17.2225 10.1913 16.8962 10.2321C15.6655 10.386 14.7306 10.9923 14.1177 12.0345C13.6556 12.8199 13.5517 13.5702 13.5508 13.5775Z'
        fill='url(#paint0_linear_410_1223)'
      />
      <defs>
        <linearGradient
          id='paint0_linear_410_1223'
          x1='17.4141'
          y1='10.1345'
          x2='2.29943'
          y2='10.1601'
          gradientUnits='userSpaceOnUse'
        >
          <stop stopColor='#00C2FF' />
          <stop offset='0.33' stopColor='#A0FAFF' />
          <stop offset='0.66' stopColor='#E5FEFF' />
          <stop offset='1' stopColor='#C46FFB' />
        </linearGradient>
      </defs>
    </svg>
  )
}

export const UserAvatarIcon = (props: React.SVGProps<SVGSVGElement>) => {
  return (
    <svg
      xmlns='http://www.w3.org/2000/svg'
      viewBox='0 0 24 24'
      fill='none'
      {...props}
    >
      <circle cx='12' cy='12' r='11' fill='#AADBFF' fillOpacity='0.9' />
      <path
        d='M12 11.7424C11.2135 11.7424 10.5415 11.4564 9.98418 10.8844C9.42684 10.3126 9.14818 9.62295 9.14818 8.81555C9.14818 8.00829 9.42684 7.31866 9.98418 6.74666C10.5415 6.17467 11.2135 5.88867 12 5.88867C12.7866 5.88867 13.4585 6.17467 14.0159 6.74666C14.5732 7.31866 14.8519 8.00829 14.8519 8.81555C14.8519 9.62295 14.5732 10.3126 14.0159 10.8844C13.4585 11.4564 12.7866 11.7424 12 11.7424ZM5.88892 16.8404V16.2517C5.88892 15.8422 5.99729 15.463 6.21403 15.114C6.43077 14.765 6.72043 14.4967 7.08303 14.3091C7.88834 13.9039 8.70077 13.6 9.52034 13.3974C10.3399 13.1947 11.1665 13.0934 12 13.0934C12.8336 13.0934 13.6601 13.1947 14.4797 13.3974C15.2993 13.6 16.1117 13.9039 16.917 14.3091C17.2796 14.4967 17.5693 14.765 17.786 15.114C18.0028 15.463 18.1111 15.8422 18.1111 16.2517V16.8404C18.1111 17.5246 18.1111 17.4998 16.8889 18.722C15.6667 19.9442 14.1291 20.5553 12 20.5553C9.87092 20.5553 8.31767 19.9285 7.11114 18.722C5.9046 17.5155 5.88892 17.5246 5.88892 16.8404Z'
        fill='#075C9A'
      />
    </svg>
  )
}

export const ChatInterruptIcon = (props: React.SVGProps<SVGSVGElement>) => {
  return (
    <svg
      xmlns='http://www.w3.org/2000/svg'
      viewBox='0 0 16 16'
      fill='none'
      {...props}
    >
      <g clipPath='url(#clip0_4249_6498)'>
        <path
          fillRule='evenodd'
          clipRule='evenodd'
          d='M0.666748 3.99996C0.666748 2.15901 2.15913 0.666626 4.00008 0.666626H12.0001C13.841 0.666626 15.3334 2.15901 15.3334 3.99996V12C15.3334 13.8409 13.841 15.3333 12.0001 15.3333H4.00008C2.15913 15.3333 0.666748 13.8409 0.666748 12V3.99996ZM4.00024 4.33321H7.00024V11.6665H4.00024V4.33321ZM12.0002 4.33321H9.00024V11.6665H12.0002V4.33321Z'
          fill='currentColor'
          fillOpacity='0.75'
        />
      </g>
      <defs>
        <clipPath id='clip0_4249_6498'>
          <rect width='16' height='16' fill='currentColor' />
        </clipPath>
      </defs>
    </svg>
  )
}

export const ChatInterruptActionIcon = (
  props: React.SVGProps<SVGSVGElement>
) => {
  return (
    <svg
      xmlns='http://www.w3.org/2000/svg'
      viewBox='0 0 28 28'
      fill='none'
      style={{
        width: '1.5rem',
        height: '1.5rem',
        color: 'currentColor'
      }}
      {...props}
    >
      <title className='sr-only'>Interrupt</title>
      <rect
        x='0.666504'
        y='0.666748'
        width='26.6667'
        height='26.6667'
        rx='6.66667'
        fill='currentColor'
      />
    </svg>
  )
}

export const ChatInterruptInlineActionIcon = (
  props: React.SVGProps<SVGSVGElement>
) => {
  return (
    <svg
      xmlns='http://www.w3.org/2000/svg'
      viewBox='0 0 20 20'
      fill='none'
      {...props}
    >
      <title className='sr-only'>Interrupt</title>
      <path
        d='M10.0005 0.598877C15.1924 0.599053 19.4009 4.8083 19.4009 10.0002C19.4007 15.192 15.1923 19.4005 10.0005 19.4006C4.80854 19.4006 0.599297 15.1921 0.599121 10.0002C0.599121 4.80819 4.80844 0.598877 10.0005 0.598877ZM10.0005 2.08325C5.62823 2.08325 2.0835 5.62799 2.0835 10.0002L2.09424 10.4075C2.29951 14.4552 5.54457 17.7011 9.59229 17.9065L10.0005 17.9163C14.2359 17.9161 17.6946 14.5902 17.9067 10.4075L17.9165 10.0002C17.9165 5.76468 14.5906 2.30612 10.4077 2.09399L10.0005 2.08325ZM9.99951 5.83325C11.9636 5.83325 12.9459 5.83353 13.5562 6.4436C14.1663 7.0538 14.1665 8.03606 14.1665 10.0002C14.1665 11.9643 14.1663 12.9467 13.5562 13.5569C12.9459 14.1667 11.9633 14.1663 9.99951 14.1663C8.03604 14.1663 7.05402 14.1667 6.44385 13.5569C5.83368 12.9467 5.8335 11.9643 5.8335 10.0002C5.8335 8.03606 5.83365 7.0538 6.44385 6.4436C7.054 5.83358 8.03578 5.83325 9.99951 5.83325Z'
        fill='currentColor'
        fillOpacity='0.75'
      />
    </svg>
  )
}

export const ChatUploadPicIcon = (props: React.SVGProps<SVGSVGElement>) => {
  return (
    <svg
      xmlns='http://www.w3.org/2000/svg'
      viewBox='0 0 34 29'
      fill='none'
      {...props}
    >
      <title className='sr-only'>Upload Picture</title>
      <path
        d='M27.0508 0.046875H7.10547C3.47656 0.046875 0.523438 3 0.523438 6.62891V21.4648C0.523438 25.0938 3.47656 28.0469 7.10547 28.0469H27.0469C30.6758 28.0469 33.6289 25.0938 33.6289 21.4648V6.62891C33.6328 3 30.6797 0.046875 27.0508 0.046875ZM12.5195 5.75C14.4102 5.75 15.9453 7.28125 15.9453 9.17578C15.9453 11.0664 14.4141 12.6016 12.5195 12.6016C10.6289 12.6016 9.09375 11.0703 9.09375 9.17578C9.09766 7.28516 10.6289 5.75 12.5195 5.75ZM7.94922 21.6484L12.6445 14.332L15.9961 19.0586L20.6953 11.9688L26.7305 21.6484H7.94922Z'
        fill='currentColor'
      />
    </svg>
  )
}

export const PresetAvatarCloseIcon = (props: React.SVGProps<SVGSVGElement>) => {
  return (
    <svg
      xmlns='http://www.w3.org/2000/svg'
      viewBox='0 0 34 34'
      fill='none'
      {...props}
    >
      <title className='sr-only'>Close</title>
      <path
        d='M17 0.751953C25.9746 0.751953 33.25 8.02733 33.25 17.002C33.2497 25.9764 25.9745 33.252 17 33.252C8.02559 33.2519 0.750264 25.9763 0.75 17.002C0.75 8.02737 8.02543 0.752019 17 0.751953ZM17 4.25195C9.95843 4.25202 4.25 9.96036 4.25 17.002C4.25026 24.0433 9.95859 29.7519 17 29.752C24.0415 29.752 29.7497 24.0434 29.75 17.002C29.75 9.96032 24.0416 4.25195 17 4.25195ZM9.5127 9.51465C10.1961 8.83127 11.3039 8.83135 11.9873 9.51465L24.4873 22.0146L24.6074 22.1475C25.1682 22.8348 25.1281 23.8485 24.4873 24.4893C23.8466 25.1299 22.8328 25.1701 22.1455 24.6094L22.0127 24.4893L9.5127 11.9893C8.82944 11.3059 8.82944 10.198 9.5127 9.51465Z'
        fill='currentColor'
      />
    </svg>
  )
}

/** @deprecated use /img/avatar-placeholder.png instead */
export const PresetPlaceholderIcon = (props: React.SVGProps<SVGSVGElement>) => {
  return (
    <svg
      xmlns='http://www.w3.org/2000/svg'
      viewBox='0 0 54 54'
      fill='none'
      {...props}
    >
      <title className='sr-only'>Preset Placeholder</title>
      <g clipPath='url(#clip0_44062_5615)'>
        <rect width='54' height='54' fill='#446CFF' />
        <circle
          cx='27.5'
          cy='27.5'
          r='17.35'
          stroke='url(#paint0_linear_44062_5615)'
          strokeOpacity='0.15'
          strokeWidth='0.3'
        />
        <circle
          cx='27.5'
          cy='27.5'
          r='22.35'
          stroke='url(#paint1_linear_44062_5615)'
          strokeOpacity='0.15'
          strokeWidth='0.3'
        />
        <path
          d='M0 27H54'
          stroke='white'
          strokeOpacity='0.18'
          strokeWidth='0.3'
        />
        <path
          d='M27 53.7549L27 -0.245118'
          stroke='white'
          strokeOpacity='0.18'
          strokeWidth='0.3'
        />
        <g filter='url(#filter0_f_44062_5615)'>
          <ellipse
            cx='22.5'
            cy='26.5'
            rx='8.5'
            ry='12.5'
            transform='rotate(46.6997 22.5 26.5)'
            fill='#263CFF'
          />
        </g>
        <path
          d='M27.6497 17.3573C27.7393 17.1447 27.9437 17 28.1743 17H33.5313C34.1598 17 34.6341 17.574 34.4638 18.179C33.9922 19.8549 33.222 21.4405 32.1845 22.8602C31.078 24.3743 29.6926 25.6652 28.1046 26.6685C28.735 26.3772 29.387 26.1285 30.0564 25.925C32.0329 25.324 34.111 25.1317 36.1605 25.3564C36.6466 25.4096 37 25.8305 37 26.3196V30.9146C37 31.5895 36.342 32.0709 35.6738 31.9757C34.746 31.8433 33.797 31.8661 32.8677 32.0479C31.2602 32.3622 29.7836 33.1383 28.6247 34.2778C27.993 34.8989 27.4711 35.6128 27.0753 36.3897C26.8909 36.7516 26.5302 37 26.1241 37H21.0279C20.3914 37 19.9156 36.4122 20.101 35.8033C20.1485 35.6473 20.1986 35.4919 20.2514 35.3373C21.0097 33.1164 22.2943 31.1047 23.9991 29.4681C24.7273 28.7691 25.5232 28.1471 26.3735 27.6099C24.3794 28.5314 22.2014 29.0114 19.9937 29.013C19.2591 29.0151 18.5288 28.9636 17.8087 28.8605C17.3365 28.7929 17 28.3787 17 27.9017V23.2864C17 22.5857 17.7067 22.0989 18.3945 22.2325C18.9175 22.3341 19.4529 22.3866 19.9937 22.3871C21.6327 22.3871 23.2349 21.9093 24.5976 21.014C25.9604 20.1186 27.0225 18.8461 27.6497 17.3573Z'
          fill='white'
        />
        <path
          d='M41.5 9C41.5 9 41.8722 11.5938 42.9223 12.7616C43.8453 13.788 46 14.5 46 14.5C46 14.5 43.8457 15.2085 42.9223 16.2384C41.8762 17.4053 41.5 20 41.5 20C41.5 20 41.1278 17.4062 40.0777 16.2384C39.1547 15.212 37 14.5 37 14.5C37 14.5 39.1547 13.788 40.0777 12.7616C41.1278 11.5938 41.5 9 41.5 9Z'
          fill='white'
        />
      </g>
      <defs>
        <filter
          id='filter0_f_44062_5615'
          x='1.69385'
          y='5.92773'
          width='41.6123'
          height='41.1445'
          filterUnits='userSpaceOnUse'
          colorInterpolationFilters='sRGB'
        >
          <feFlood floodOpacity='0' result='BackgroundImageFix' />
          <feBlend
            mode='normal'
            in='SourceGraphic'
            in2='BackgroundImageFix'
            result='shape'
          />
          <feGaussianBlur
            stdDeviation='5'
            result='effect1_foregroundBlur_44062_5615'
          />
        </filter>
        <linearGradient
          id='paint0_linear_44062_5615'
          x1='38.6806'
          y1='38.1944'
          x2='14.375'
          y2='15.8333'
          gradientUnits='userSpaceOnUse'
        >
          <stop offset='0.00343646' stopColor='white' />
          <stop offset='1' stopColor='white' stopOpacity='0.8' />
        </linearGradient>
        <linearGradient
          id='paint1_linear_44062_5615'
          x1='27.5'
          y1='5'
          x2='27.5'
          y2='50'
          gradientUnits='userSpaceOnUse'
        >
          <stop stopColor='white' />
          <stop offset='1' stopColor='white' stopOpacity='0.5' />
        </linearGradient>
        <clipPath id='clip0_44062_5615'>
          <rect width='54' height='54' fill='white' />
        </clipPath>
      </defs>
    </svg>
  )
}

export const FilledTooltipIcon = (props: React.SVGProps<SVGSVGElement>) => (
  <svg
    xmlns='http://www.w3.org/2000/svg'
    viewBox='0 0 20 20'
    fill='none'
    {...props}
  >
    {/* <title className='sr-only'>Tooltip</title> */}
    <path
      fillRule='evenodd'
      clipRule='evenodd'
      d='M16.25 10C16.25 13.4518 13.4518 16.25 10 16.25C6.54822 16.25 3.75 13.4518 3.75 10C3.75 6.54822 6.54822 3.75 10 3.75C13.4518 3.75 16.25 6.54822 16.25 10ZM8.75 6.66667C8.75 6.20643 9.1231 5.83333 9.58333 5.83333H10.4167C10.8769 5.83333 11.25 6.20643 11.25 6.66667V9.58333C11.25 10.0436 10.8769 10.4167 10.4167 10.4167H9.58333C9.1231 10.4167 8.75 10.0436 8.75 9.58333V6.66667ZM9.58333 11.6667C9.1231 11.6667 8.75 12.0398 8.75 12.5V13.3333C8.75 13.7936 9.1231 14.1667 9.58333 14.1667H10.4167C10.8769 14.1667 11.25 13.7936 11.25 13.3333V12.5C11.25 12.0398 10.8769 11.6667 10.4167 11.6667H9.58333Z'
      fill='currentColor'
      fillOpacity='0.75'
    />
  </svg>
)

export const VoiceIcon = (props: React.SVGProps<SVGSVGElement>) => (
  <svg
    viewBox='0 0 42 42'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
    {...props}
  >
    <title className='sr-only'>Voice</title>
    <g filter='url(#filter0_d_47819_9330)'>
      <path
        d='M6 12C6 7.58172 9.58172 4 14 4H28C32.4183 4 36 7.58172 36 12V26C36 30.4183 32.4183 34 28 34H14C9.58172 34 6 30.4183 6 26V12Z'
        fill='#39CAFF'
      />
      <path
        d='M16.2 21.04V16.9608C16.2 16.6818 16.3453 16.4229 16.5836 16.2777L19.6502 14.4084C20.1833 14.0835 20.8666 14.4672 20.8666 15.0915V22.9092C20.8666 23.5335 20.1834 23.9172 19.6503 23.5923L16.5836 21.7232C16.3453 21.5779 16.2 21.3191 16.2 21.04Z'
        fill='white'
        stroke='white'
        stroke-width='1.2'
      />
      <path
        d='M23.5332 16.5V16.5C24.4565 18.0388 24.4565 19.9612 23.5332 21.5V21.5'
        stroke='white'
        stroke-width='1.2'
        stroke-linecap='round'
      />
      <path
        d='M25.8333 15V15C27.3628 17.4473 27.3628 20.5527 25.8333 23V23'
        stroke='white'
        stroke-width='1.2'
        stroke-linecap='round'
      />
      <rect
        x='13.5334'
        y='16.333'
        width='1.2'
        height='5.33333'
        rx='0.6'
        fill='white'
      />
    </g>
    <defs>
      <filter
        id='filter0_d_47819_9330'
        x='0'
        y='0'
        width='42'
        height='42'
        filterUnits='userSpaceOnUse'
        color-interpolation-filters='sRGB'
      >
        <feFlood flood-opacity='0' result='BackgroundImageFix' />
        <feColorMatrix
          in='SourceAlpha'
          type='matrix'
          values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0'
          result='hardAlpha'
        />
        <feOffset dy='2' />
        <feGaussianBlur stdDeviation='3' />
        <feComposite in2='hardAlpha' operator='out' />
        <feColorMatrix
          type='matrix'
          values='0 0 0 0 0.0784314 0 0 0 0 0.0784314 0 0 0 0 0.168627 0 0 0 0.06 0'
        />
        <feBlend
          mode='normal'
          in2='BackgroundImageFix'
          result='effect1_dropShadow_47819_9330'
        />
        <feBlend
          mode='normal'
          in='SourceGraphic'
          in2='effect1_dropShadow_47819_9330'
          result='shape'
        />
      </filter>
    </defs>
  </svg>
)

export const LoadingSparkleIcon = (props: React.SVGProps<SVGSVGElement>) => {
  const { className, ...rest } = props
  return (
    <svg
      viewBox='0 0 15 16'
      fill='none'
      xmlns='http://www.w3.org/2000/svg'
      className={cn('animate-spin', className)}
      {...rest}
    >
      <path
        fill-rule='evenodd'
        clip-rule='evenodd'
        d='M8.00016 0.666992C8.36835 0.666992 8.66683 0.965469 8.66683 1.33366V3.00033C8.66683 3.36852 8.36835 3.66699 8.00016 3.66699C7.63197 3.66699 7.3335 3.36852 7.3335 3.00033V1.33366C7.3335 0.965469 7.63197 0.666992 8.00016 0.666992ZM2.94788 2.83471C3.20823 2.57436 3.63034 2.57436 3.89069 2.83471L5.3049 4.24892C5.56525 4.50927 5.56525 4.93138 5.3049 5.19173C5.04455 5.45208 4.62244 5.45208 4.36209 5.19173L2.94788 3.77752C2.68753 3.51717 2.68753 3.09506 2.94788 2.83471ZM12.9144 2.97278C13.1747 3.23313 13.1747 3.65524 12.9144 3.91559L11.9716 4.8584C11.7112 5.11875 11.2891 5.11875 11.0288 4.8584C10.7684 4.59805 10.7684 4.17594 11.0288 3.91559L11.9716 2.97278C12.2319 2.71243 12.654 2.71243 12.9144 2.97278ZM0.833496 7.83366C0.833496 7.46547 1.13197 7.16699 1.50016 7.16699H3.8335C4.20169 7.16699 4.50016 7.46547 4.50016 7.83366C4.50016 8.20185 4.20169 8.50033 3.8335 8.50033H1.50016C1.13197 8.50033 0.833496 8.20185 0.833496 7.83366ZM12.5002 7.83366C12.5002 7.46547 12.7986 7.16699 13.1668 7.16699H14.1668C14.535 7.16699 14.8335 7.46547 14.8335 7.83366C14.8335 8.20185 14.535 8.50033 14.1668 8.50033H13.1668C12.7986 8.50033 12.5002 8.20185 12.5002 7.83366ZM5.63823 10.1956C5.89858 10.4559 5.89858 10.878 5.63823 11.1384L3.75262 13.024C3.49227 13.2844 3.07016 13.2844 2.80981 13.024C2.54946 12.7637 2.54946 12.3416 2.80981 12.0812L4.69543 10.1956C4.95577 9.93524 5.37788 9.93524 5.63823 10.1956ZM11.3621 11.1956C11.6224 10.9352 12.0446 10.9352 12.3049 11.1956L12.7763 11.667C13.0367 11.9273 13.0367 12.3495 12.7763 12.6098C12.516 12.8702 12.0938 12.8702 11.8335 12.6098L11.3621 12.1384C11.1017 11.878 11.1017 11.4559 11.3621 11.1956ZM8.00016 11.167C8.36835 11.167 8.66683 11.4655 8.66683 11.8337V14.5003C8.66683 14.8685 8.36835 15.167 8.00016 15.167C7.63197 15.167 7.3335 14.8685 7.3335 14.5003V11.8337C7.3335 11.4655 7.63197 11.167 8.00016 11.167Z'
        fill='white'
      />
    </svg>
  )
}

export const RefreshIcon = (props: React.SVGProps<SVGSVGElement>) => {
  return (
    <svg
      viewBox='0 0 24 24'
      fill='none'
      xmlns='http://www.w3.org/2000/svg'
      {...props}
    >
      <path
        d='M12 1C18.0751 1 23 5.92487 23 12C23 18.0751 18.0751 23 12 23C5.92487 23 1 18.0751 1 12C1 5.92487 5.92487 1 12 1ZM17.251 10.5273C17.0491 10.5546 16.8656 10.6607 16.7402 10.8213C16.6151 10.9819 16.5574 11.1853 16.5801 11.3877V11.3906C16.7011 12.3001 16.5492 13.2254 16.1426 14.0479C15.7358 14.8704 15.0922 15.5538 14.2959 16.0098C13.4998 16.4654 12.5859 16.6739 11.6709 16.6084C10.8669 16.5507 10.093 16.2847 9.42676 15.8379L9.72168 15.7324L9.72852 15.7285L9.79492 15.7021L9.80273 15.6982C10.5759 15.3351 10.3625 14.1316 9.46484 14.1025L7.52832 14.04H7.4541L7.44336 14.041C6.83408 14.0825 6.43832 14.7716 6.79395 15.3291C7.52219 16.4681 8.60377 17.3373 9.87305 17.8027C11.1423 18.2681 12.5294 18.3045 13.8213 17.9062C16.7498 17.0036 18.5221 14.1228 18.126 11.1836L18.125 11.1787C18.0932 10.9776 17.9836 10.7965 17.8203 10.6748C17.6571 10.5534 17.4526 10.5003 17.251 10.5273ZM14.1289 6.2002C12.8599 5.73509 11.4732 5.69948 10.1816 6.09766C7.25475 7.00038 5.48193 9.87852 5.87598 12.8164C5.88757 12.9195 5.92009 13.0208 5.9707 13.1113C6.02133 13.2016 6.09027 13.281 6.17188 13.3447C6.25361 13.4084 6.34725 13.4553 6.44727 13.4824C6.54736 13.5095 6.65211 13.5167 6.75488 13.5029C6.8577 13.4891 6.95745 13.4549 7.04688 13.4023C7.13619 13.3497 7.21437 13.2794 7.27637 13.1963C7.33838 13.113 7.38427 13.0178 7.40918 12.917C7.43367 12.8178 7.43715 12.7143 7.42188 12.6133C7.30082 11.7037 7.45364 10.7776 7.86035 9.95508C8.26709 9.13272 8.90992 8.45006 9.70605 7.99414C10.5024 7.53823 11.4168 7.32895 12.332 7.39453C13.1356 7.45215 13.9082 7.71954 14.5742 8.16602L14.2812 8.27148L14.2734 8.27441L14.207 8.30176L14.1992 8.30566L14.0654 8.38281C13.4558 8.81471 13.6968 9.87409 14.5381 9.90137L16.4736 9.96289V9.96387L16.4824 9.96289L16.5498 9.96191H16.5586C17.1683 9.9216 17.5651 9.23135 17.209 8.67383C16.4808 7.53493 15.3981 6.66554 14.1289 6.2002Z'
        fill='white'
        fill-opacity='0.8'
      />
    </svg>
  )
}

export const VoicePrintIcon = (props: React.SVGProps<SVGSVGElement>) => {
  return (
    <svg
      viewBox='0 0 12 12'
      fill='none'
      xmlns='http://www.w3.org/2000/svg'
      {...props}
    >
      <g clip-path='url(#clip0_47640_8548)'>
        <path
          d='M6 0.805664C5.66389 0.805664 5.38889 1.08066 5.38889 1.41678V10.5834C5.38889 10.9196 5.66389 11.1946 6 11.1946C6.33611 11.1946 6.61111 10.9196 6.61111 10.5834V1.41678C6.61111 1.08066 6.33611 0.805664 6 0.805664ZM3.55556 2.94455C3.21944 2.94455 2.94444 3.21955 2.94444 3.55566V8.44455C2.94444 8.78066 3.21944 9.05566 3.55556 9.05566C3.89167 9.05566 4.16667 8.78066 4.16667 8.44455V3.55566C4.16667 3.21955 3.89167 2.94455 3.55556 2.94455ZM8.44444 2.94455C8.10833 2.94455 7.83333 3.21955 7.83333 3.55566V8.44455C7.83333 8.78066 8.10833 9.05566 8.44444 9.05566C8.78056 9.05566 9.05556 8.78066 9.05556 8.44455V3.55566C9.05556 3.21955 8.78056 2.94455 8.44444 2.94455ZM1.11111 4.16678C0.775 4.16678 0.5 4.44178 0.5 4.77789V7.22233C0.5 7.55844 0.775 7.83344 1.11111 7.83344C1.44722 7.83344 1.72222 7.55844 1.72222 7.22233V4.77789C1.72222 4.44178 1.44722 4.16678 1.11111 4.16678ZM10.8889 4.16678C10.5528 4.16678 10.2778 4.44178 10.2778 4.77789V7.22233C10.2778 7.55844 10.5528 7.83344 10.8889 7.83344C11.225 7.83344 11.5 7.55844 11.5 7.22233V4.77789C11.5 4.44178 11.225 4.16678 10.8889 4.16678Z'
          fill='white'
        />
      </g>
      <defs>
        <clipPath id='clip0_47640_8548'>
          <rect width='12' height='12' fill='white' />
        </clipPath>
      </defs>
    </svg>
  )
}

export const StartCheckIcon = (props: React.SVGProps<SVGSVGElement>) => {
  return (
    <svg
      viewBox='0 0 16 16'
      fill='none'
      xmlns='http://www.w3.org/2000/svg'
      {...props}
    >
      <path
        d='M7.33984 0.964844C7.65764 0.500926 8.3425 0.500751 8.66016 0.964844L9.41406 2.06738C9.61922 2.36696 10.0007 2.49094 10.3428 2.36914L11.6006 1.9209C12.1303 1.73216 12.6845 2.1342 12.6689 2.69629L12.6318 4.03125C12.6216 4.39416 12.8569 4.71863 13.2051 4.82129L14.4863 5.19824C15.026 5.35697 15.2378 6.00849 14.8945 6.4541L14.0801 7.5127C13.8585 7.8004 13.8585 8.20058 14.0801 8.48828L14.8945 9.54688C15.2378 9.99248 15.026 10.644 14.4863 10.8027L13.2051 11.1797C12.8569 11.2823 12.6216 11.6068 12.6318 11.9697L12.6689 13.3047C12.6845 13.8668 12.1303 14.2688 11.6006 14.0801L10.3428 13.6318C10.0007 13.51 9.61922 13.634 9.41406 13.9336L8.66016 15.0361C8.3425 15.5002 7.65764 15.5 7.33984 15.0361L6.58496 13.9336C6.37976 13.634 5.99831 13.51 5.65625 13.6318L4.39844 14.0801C3.86868 14.2688 3.31455 13.8668 3.33008 13.3047L3.36816 11.9697C3.37836 11.6067 3.14225 11.2823 2.79395 11.1797L1.5127 10.8027C0.973086 10.644 0.761299 9.99248 1.10449 9.54688L1.91992 8.48828C2.14111 8.20073 2.14111 7.80025 1.91992 7.5127L1.10449 6.4541C0.761286 6.0085 0.973081 5.35696 1.5127 5.19824L2.79395 4.82129C3.14225 4.7187 3.37836 4.39423 3.36816 4.03125L3.33008 2.69629C3.31454 2.13421 3.86868 1.73216 4.39844 1.9209L5.65625 2.36914C5.9983 2.491 6.37976 2.36692 6.58496 2.06738L7.33984 0.964844ZM6.75586 8.70117L5.17871 7.125L4.61328 7.68945L4.04883 8.25586L6.19043 10.3984L6.75684 10.9648L7.32227 10.3984L11.6074 6.1123L11.042 5.54688L10.4766 4.98242L6.75586 8.70117Z'
        fill='#50E3C2'
      />
    </svg>
  )
}

export const DisconnectedIcon = (props: React.SVGProps<SVGSVGElement>) => {
  return (
    <svg
      viewBox='0 0 16 16'
      fill='none'
      xmlns='http://www.w3.org/2000/svg'
      {...props}
    >
      <path
        d='M8.20141 3.80685C8.73446 3.29617 9.44635 3.01463 10.1845 3.02259C10.9227 3.03055 11.6283 3.32737 12.1502 3.84942C12.6722 4.37148 12.9688 5.07722 12.9765 5.81538C12.9843 6.55353 12.7026 7.26535 12.1917 7.79826L11.8258 8.11613C11.7431 8.18627 11.6752 8.27212 11.626 8.3687C11.5767 8.46528 11.5472 8.57067 11.5389 8.67877C11.5307 8.78687 11.5441 8.89552 11.5782 8.99843C11.6122 9.10134 11.6664 9.19646 11.7375 9.27827C11.8087 9.36009 11.8953 9.42698 11.9925 9.47506C12.0896 9.52315 12.1954 9.55147 12.3036 9.55839C12.4117 9.56531 12.5202 9.55069 12.6227 9.51537C12.7252 9.48006 12.8197 9.42475 12.9007 9.35266L13.2895 9.01513C13.7225 8.60541 14.069 8.11303 14.3085 7.56711C14.548 7.02118 14.6756 6.43279 14.6838 5.83671C14.692 5.24063 14.5806 4.64895 14.3562 4.09665C14.1318 3.54436 13.799 3.04265 13.3774 2.62119C12.9557 2.19973 12.4539 1.86707 11.9016 1.64287C11.3492 1.41867 10.7575 1.30748 10.1614 1.31587C9.56531 1.32427 8.97696 1.45207 8.43112 1.69174C7.88528 1.93141 7.39302 2.27807 6.98345 2.71124L6.64483 3.1012C6.57454 3.18268 6.52098 3.27721 6.48723 3.37938C6.45347 3.48156 6.44016 3.58938 6.44808 3.6967C6.46405 3.91343 6.56548 4.11494 6.73003 4.2569C6.89458 4.39885 7.10879 4.46963 7.32552 4.45365C7.54226 4.43767 7.74377 4.33625 7.88572 4.17169L8.2025 3.80685H8.20141ZM3.04557 3.0586C2.89215 3.21221 2.80598 3.42044 2.80598 3.63754C2.80598 3.85464 2.89215 4.06287 3.04557 4.21648L6.83599 8.0069L5.23025 9.61264C5.08553 9.76794 5.00675 9.97335 5.0105 10.1856C5.01424 10.3978 5.10022 10.6003 5.25032 10.7504C5.40042 10.9005 5.60293 10.9865 5.81517 10.9903C6.02741 10.994 6.23282 10.9152 6.38813 10.7705L7.99387 9.16478L11.7843 12.9552C11.8593 13.0357 11.9497 13.1002 12.0502 13.145C12.1507 13.1898 12.2592 13.2139 12.3692 13.2158C12.4792 13.2178 12.5885 13.1975 12.6905 13.1563C12.7925 13.1151 12.8852 13.0538 12.963 12.976C13.0408 12.8982 13.1021 12.8055 13.1433 12.7035C13.1845 12.6015 13.2047 12.4922 13.2028 12.3822C13.2008 12.2722 13.1768 12.1638 13.132 12.0633C13.0872 11.9628 13.0227 11.8723 12.9422 11.7973L8.58482 7.43888C8.57697 7.43071 8.56896 7.4227 8.56079 7.41485L4.20345 3.0586C4.04984 2.90518 3.84161 2.81901 3.62451 2.81901C3.40741 2.81901 3.19918 2.90518 3.04557 3.0586ZM10.7575 5.24328C10.6039 5.08986 10.3956 5.00369 10.1785 5.00369C9.96144 5.00369 9.75321 5.08986 9.5996 5.24328L8.87101 5.97078C8.79052 6.04578 8.72596 6.13623 8.68119 6.23672C8.63641 6.33721 8.61233 6.4457 8.61039 6.5557C8.60845 6.6657 8.62869 6.77497 8.66989 6.87698C8.71109 6.97899 8.77242 7.07166 8.85022 7.14945C8.92801 7.22725 9.02068 7.28858 9.12269 7.32978C9.2247 7.37098 9.33397 7.39122 9.44397 7.38928C9.55397 7.38734 9.66246 7.36326 9.76295 7.31848C9.86344 7.27371 9.95389 7.20915 10.0289 7.12866L10.7575 6.40116C10.9109 6.24755 10.9971 6.03932 10.9971 5.82222C10.9971 5.60512 10.9109 5.39689 10.7575 5.24328ZM4.2384 6.73432C4.16713 6.65367 4.08066 6.58786 3.98394 6.54064C3.88722 6.49343 3.78215 6.46573 3.67472 6.45914C3.56729 6.45254 3.45962 6.46718 3.35785 6.50222C3.25609 6.53725 3.16222 6.59199 3.08162 6.66332L2.70039 7.00085C2.27554 7.412 1.93713 7.90388 1.70501 8.44762C1.47289 8.99136 1.35174 9.576 1.34869 10.1672C1.34564 10.7584 1.46074 11.3443 1.68723 11.8904C1.91372 12.4365 2.24704 12.9318 2.66762 13.3473C3.51217 14.1814 4.6514 14.649 5.83836 14.6488C7.02532 14.6486 8.16438 14.1806 9.00865 13.3463C9.03832 13.3171 9.0657 13.2857 9.09057 13.2523L9.38004 12.8634C9.50969 12.689 9.56474 12.4703 9.53309 12.2553C9.50144 12.0403 9.38568 11.8467 9.21128 11.717C9.03687 11.5874 8.81811 11.5323 8.60312 11.564C8.38813 11.5956 8.19451 11.7114 8.06487 11.8858L7.81472 12.2211C7.27368 12.7343 6.55431 13.017 5.80866 13.0094C5.063 13.0019 4.34949 12.7047 3.81895 12.1807C3.5566 11.9216 3.34802 11.6132 3.2052 11.2732C3.06238 10.9333 2.98813 10.5684 2.98671 10.1997C2.98528 9.83092 3.05672 9.46553 3.19692 9.12447C3.33712 8.78341 3.54331 8.4734 3.80365 8.21226L4.1674 7.89111C4.24805 7.81983 4.31386 7.73337 4.36108 7.63665C4.4083 7.53993 4.43599 7.43485 4.44259 7.32743C4.44918 7.22 4.43454 7.11233 4.39951 7.01056C4.36447 6.90879 4.30973 6.81492 4.2384 6.73432Z'
        fill='white'
        fill-opacity='0.75'
      />
    </svg>
  )
}

export const UserAgreementIcon = (props: React.SVGProps<SVGSVGElement>) => {
  return (
    <svg
      viewBox='0 0 18 18'
      fill='none'
      xmlns='http://www.w3.org/2000/svg'
      {...props}
    >
      <path
        d='M11.2007 1.4248C12.1553 1.4248 12.9373 1.42319 13.5571 1.5C14.1941 1.57904 14.7577 1.75037 15.2261 2.16309C15.3188 2.24484 15.407 2.33307 15.4888 2.42578C15.9015 2.89406 16.0728 3.45695 16.1519 4.09375C16.2288 4.71367 16.2271 5.49625 16.2271 6.45117V9.95703C16.2271 11.2363 16.2287 12.2616 16.1284 13.0703C16.0259 13.8962 15.8078 14.5932 15.3013 15.168C15.1986 15.2844 15.0886 15.3944 14.9722 15.4971C14.3974 16.0037 13.7004 16.2217 12.8745 16.3242C12.0657 16.4245 11.0396 16.4238 9.76025 16.4238H8.62451V15.0107H9.76025C11.0761 15.0107 11.9991 15.0089 12.7007 14.9219C13.3848 14.8369 13.7621 14.6803 14.0376 14.4375C14.1097 14.374 14.1772 14.3055 14.2407 14.2334C14.4836 13.9579 14.6412 13.5809 14.7261 12.8965C14.8131 12.1949 14.814 11.2728 14.814 9.95703V6.45117C14.814 5.45978 14.8131 4.7803 14.7495 4.26758C14.688 3.77256 14.5773 3.52949 14.4282 3.36035C14.3856 3.31203 14.3398 3.26527 14.2915 3.22266C14.1223 3.07376 13.8782 2.96376 13.3833 2.90234C12.8706 2.83882 12.1918 2.83691 11.2007 2.83691H9.41748C8.5405 2.83692 8.26551 2.84559 8.06299 2.91016C7.58734 3.06211 7.21408 3.43553 7.06201 3.91113C6.99735 4.11369 6.98877 4.38913 6.98877 5.2666V13.7012C6.98853 15.2046 5.76959 16.4237 4.26611 16.4238C2.76273 16.4236 1.54369 15.2046 1.54346 13.7012V4.12402H2.95557V13.7012C2.9558 14.4242 3.54308 15.0105 4.26611 15.0107C4.98923 15.0106 5.57545 14.4243 5.57568 13.7012V5.2666C5.57568 4.49709 5.56689 3.94643 5.71533 3.48145C6.00647 2.56999 6.72182 1.85555 7.6333 1.56445C8.09823 1.4161 8.64812 1.4248 9.41748 1.4248H11.2007ZM13.8911 11.7246H7.9126V10.2266H13.8911V11.7246ZM12.2603 9.22754H7.9126V7.72949H12.2603V9.22754ZM13.8911 6.73047H7.9126V5.23242H13.8911V6.73047Z'
        fill='white'
      />
    </svg>
  )
}

export const PrivacyPolicyIcon = (props: React.SVGProps<SVGSVGElement>) => {
  return (
    <svg
      viewBox='0 0 18 18'
      fill='none'
      xmlns='http://www.w3.org/2000/svg'
      {...props}
    >
      <path
        d='M11.5703 1.54492C13.1427 1.54517 14.4176 2.82022 14.418 4.39258V7.16504C14.4178 7.57903 14.082 7.91487 13.668 7.91504C13.2538 7.91504 12.9181 7.57914 12.918 7.16504V4.39258C12.9176 3.64865 12.3143 3.04517 11.5703 3.04492H5.27637C4.53227 3.04499 3.92904 3.64854 3.92871 4.39258V13.833C3.92885 14.5772 4.53215 15.1806 5.27637 15.1807H7.1123C7.52624 15.1808 7.86204 15.5168 7.8623 15.9307C7.86224 16.3447 7.52636 16.6805 7.1123 16.6807H5.27637C3.70372 16.6806 2.42885 15.4056 2.42871 13.833V4.39258C2.42904 2.82012 3.70384 1.54499 5.27637 1.54492H11.5703ZM15.7646 16.4551H8.42285V11.7354H15.7646V16.4551ZM9.92285 14.9551H14.2646V13.2354H9.92285V14.9551ZM12.0938 7.83789C13.6663 7.83789 14.9411 9.11304 14.9414 10.6855V11.7344H13.4414V10.6855C13.4411 9.94147 12.8379 9.33789 12.0938 9.33789C11.3498 9.33816 10.7464 9.94163 10.7461 10.6855V11.7344H9.24609V10.6855C9.24643 9.11321 10.5214 7.83816 12.0938 7.83789Z'
        fill='white'
      />
    </svg>
  )
}
